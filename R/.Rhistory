getwd()
install.packages("swirl")
library(swirl)
swirl()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
library(datasets)
data(iris)
?iris
iris
iris$Sepal.Length
iris$Sepal.Length[virginica]
iris[virginica]$Sepal.Length
iris3
iris3$Sepal L.
iris3$Sepal L
iris3$Sepal.lenghth
iris3$Sepal
iris3$1
iris3[1]
iris3$virginica
iris3[virginica]
tapply(iris$Sepal.Length, iris$virginica, mean)
tapply(iris$Sepal.Length, iris$species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Virginica, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
-209.21429 + 82.63636
debug(ls)
ls
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
getwd()
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
source('~/Desktop/YgeWrNPORb/R/rprog-003:assignment/ex_3_funtions.R')
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
ls()
dir()
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return("Error: invalid outcome")
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("Error: invalid state")
if(! is.element(outcome, Outcome.List)) stop("Error: invalid outcome")
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## rate
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
#print(min(data))
#print(Hospital.Name)
output <- sort(unlist(Hospital.List))
#print(output)
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## rate
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
#print(min(data))
#print(Hospital.Name)
output <- sort(unlist(Hospital.List))
return(output)
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
