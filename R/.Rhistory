<<<<<<< HEAD
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
getwd()
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i] # MAKE A LIST instead a normal variable
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
print(min(data))
print(Hospital.Name)
output <- sort(unlist(Hospital.List))
print(output)
## rate
}
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
source('~/Desktop/YgeWrNPORb/R/rprog-003:assignment/ex_3_funtions.R')
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) {
return("Error: invalid state")
}
if(! is.element(outcome, Outcome.List)) {
return(Error: invalid outcome)
}
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
=======
if (num != "best" && num != "worst" && num > nrow(d)) {
hospName <- "<NA>"
} else {
if (num == "best") {
hospName <- d[[1,2]]
} else if (num == "worst") {
hospName <- d[[nrow(d),2]]
} else {
hospName <- d[[num,2]]
}
}
hospitals <- append(hospitals, hospName)
}
retval <- data.frame(hospital=hospitals, state=States)
return(retval)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
}
if (num == "best") {
Hospital.Name <- d[[1,2]]
if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
>>>>>>> FETCH_HEAD
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(!is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check if outcome is valid
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## convert outcome to column index
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
df <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- df[order(as.numeric(df[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
df <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(df)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- df[[1,2]]
} else if (num == "worst") {
Hospital.Name <- df[[nrow(df),2]]
} else {
Hospital.Name <- df[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check if outcome is valid
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## convert outcome to column index
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome) # bind columns
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
df <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- df[order(as.numeric(df[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
## For each state, find the hospital of the given rank
for (state in States) {
df <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(df)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- df[[1,2]]
} else if (num == "worst") {
Hospital.Name <- df[[nrow(df),2]]
} else {
Hospital.Name <- df[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(data.frame(hospital=hospitals, state=States))
}
## TEST rankall()
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()3
submit()3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
warnings()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()1
submit()1
submit()
submit()
submit()
traceback()
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## rate
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i]
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
output <- sort(unlist(Hospital.List))
return(output)
}
<<<<<<< HEAD
best("AL", "heart attack")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Alessio")
my_name <- c(my_char, "Alessio")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3:3, 5:5, 7:7)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patinets, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(cnames, my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(y)
plot(e)
plot(x)
plot(y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
=======
best("NY", "pneumonia")
submit()
>>>>>>> FETCH_HEAD
