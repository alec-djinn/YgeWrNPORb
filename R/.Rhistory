if (num != "best" && num != "worst" && num > nrow(d)) {
hospName <- "<NA>"
} else {
if (num == "best") {
hospName <- d[[1,2]]
} else if (num == "worst") {
hospName <- d[[nrow(d),2]]
} else {
hospName <- d[[num,2]]
}
}
hospitals <- append(hospitals, hospName)
}
retval <- data.frame(hospital=hospitals, state=States)
return(retval)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
}
if (num == "best") {
Hospital.Name <- d[[1,2]]
if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
# order the data frame alphabetically by Hospital names
d <- new_dataset[order(new_dataset[,2]),]
# again order the data frame based on mortality rate
new_data <- d[order(as.numeric(d[,3])),]
States <- sort(unique(new_data[,1]))
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(!is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
d <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- d[order(as.numeric(d[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
d <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(d)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- d[[1,2]]
} else if (num == "worst") {
Hospital.Name <- d[[nrow(d),2]]
} else {
Hospital.Name <- d[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check if outcome is valid
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## convert outcome to column index
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome)
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
df <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- df[order(as.numeric(df[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
for (state in States) {
df <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(df)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- df[[1,2]]
} else if (num == "worst") {
Hospital.Name <- df[[nrow(df),2]]
} else {
Hospital.Name <- df[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
return(data.frame(hospital=hospitals, state=States))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check if outcome is valid
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## convert outcome to column index
if (outcome == "heart attack") {
col <- 11
} else if (outcome == "heart failure") {
col <- 17
} else if (outcome == "pneumonia") {
col <- 23
}
States <- dataset$State
Hospitals <- dataset$Hospital.Name
Outcome <- dataset[,col]
new_data <- cbind(States, Hospitals, Outcome) # bind columns
new_dataset <- subset(new_data, new_data[,3] != "Not Available")
df <- new_dataset[order(new_dataset[,2]),] # order by name
new_data <- df[order(as.numeric(df[,3])),] # order by mortality rate
States <- sort(unique(new_data[,1])) # sort
hospitals <- vector()
## For each state, find the hospital of the given rank
for (state in States) {
df <- subset(new_data, new_data[,1] == state)
if (num != "best" && num != "worst" && num > nrow(df)) {
Hospital.Name <- "<NA>"
} else {
if (num == "best") {
Hospital.Name <- df[[1,2]]
} else if (num == "worst") {
Hospital.Name <- df[[nrow(df),2]]
} else {
Hospital.Name <- df[[num,2]]
}
}
hospitals <- append(hospitals, Hospital.Name)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(data.frame(hospital=hospitals, state=States))
}
## TEST rankall()
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()3
submit()3
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
warnings()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()1
submit()1
submit()
submit()
submit()
traceback()
best <- function(state, outcome) {
## Read outcome data
dataset <-read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
State.List <- dataset[, "State"]
Outcome.List <- list("heart attack", "heart failure", "pneumonia")
if(!is.element(state, State.List)) stop("invalid state")
if(! is.element(outcome, Outcome.List)) stop("invalid outcome")
## rate
dataset <- subset(dataset, State == state) # all entries reguarding a State
if(outcome == "heart attack") {
data <- dataset[, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
}
if(outcome == "heart failure") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
}
if(outcome == "pneumonia") {
data <- dataset[state, "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"]
}
## Return hospital name in that state with lowest 30-day death
Hospital.List <- list()
for(i in 1:nrow(dataset)) {
row <- data[i]
if(row == min(data)) {
Hospital.Name <- dataset[i, "Hospital.Name"]
Hospital.List <- append(Hospital.List, Hospital.Name)
}
}
output <- sort(unlist(Hospital.List))
return(output)
}
best("NY", "pneumonia")
submit()
